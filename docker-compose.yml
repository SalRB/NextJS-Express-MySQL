version: "3.8"

services:
  backend:
    container_name: backend
    image: node:18.15.0
    tty: true
    working_dir: /home/node/app
    ports:
      - $BACKEND_LOCAL_PORT:$BACKEND_DOCKER_PORT
    volumes:
      - ./backend:/home/node/app
    networks:
      - readthis
    depends_on:
      - mysql
    command: /bin/bash -c "usermod -u `stat -c '${UID}' .` node && groupmod -g `stat -c '${GID}' .` node && su node -c 'npm install && npm run dev'"
  # beckend:
  #   build:
  #     context: ./docker
  #     target: express
  #     args:
  #       UID: ${UID}
  #   container_name: frontend_drfr
  #   command: npm run start
  #   depends_on:
  #     # backend:
  #     #   condition: service_started
  #     mysql:
  #       condition: service_healthy
  #   volumes:
  #     # - ./frontend/:/var/www
  #     - ./backend:/home/node/app
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - readthis

  # popallawMongodb:
  #   container_name: popallawMongodb
  #   image: mongo:6.0.1
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
  #     - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
  #   volumes:
  #     - ./backend/data:/data/db
  #   networks:
  #     - popallawNetwork
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    ports:
      - "3306:3306"
    networks:
      - readthis
    volumes:
      - ./data/db:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 2s

networks:
  readthis:
